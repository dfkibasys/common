/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.dfki.cos.basys.common.rest.camunda.dto.AuthorizationExceptionDtoAllOf;
import de.dfki.cos.basys.common.rest.camunda.dto.ExceptionDto;
import de.dfki.cos.basys.common.rest.camunda.dto.MissingAuthorizationDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AuthorizationExceptionDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-12T00:15:55.778Z[GMT]")
public class AuthorizationExceptionDto {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_MISSING_AUTHORIZATIONS = "missingAuthorizations";
  @SerializedName(SERIALIZED_NAME_MISSING_AUTHORIZATIONS)
  private List<MissingAuthorizationDto> missingAuthorizations = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;


  public AuthorizationExceptionDto userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The id of the user that does not have expected permissions
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the user that does not have expected permissions")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public AuthorizationExceptionDto missingAuthorizations(List<MissingAuthorizationDto> missingAuthorizations) {
    
    this.missingAuthorizations = missingAuthorizations;
    return this;
  }

  public AuthorizationExceptionDto addMissingAuthorizationsItem(MissingAuthorizationDto missingAuthorizationsItem) {
    if (this.missingAuthorizations == null) {
      this.missingAuthorizations = new ArrayList<MissingAuthorizationDto>();
    }
    this.missingAuthorizations.add(missingAuthorizationsItem);
    return this;
  }

   /**
   * Get missingAuthorizations
   * @return missingAuthorizations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MissingAuthorizationDto> getMissingAuthorizations() {
    return missingAuthorizations;
  }


  public void setMissingAuthorizations(List<MissingAuthorizationDto> missingAuthorizations) {
    this.missingAuthorizations = missingAuthorizations;
  }


  public AuthorizationExceptionDto type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * An exception class indicating the occurred error.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An exception class indicating the occurred error.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public AuthorizationExceptionDto message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * A detailed message of the error.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A detailed message of the error.")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationExceptionDto authorizationExceptionDto = (AuthorizationExceptionDto) o;
    return Objects.equals(this.userId, authorizationExceptionDto.userId) &&
        Objects.equals(this.missingAuthorizations, authorizationExceptionDto.missingAuthorizations) &&
        Objects.equals(this.type, authorizationExceptionDto.type) &&
        Objects.equals(this.message, authorizationExceptionDto.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, missingAuthorizations, type, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationExceptionDto {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    missingAuthorizations: ").append(toIndentedString(missingAuthorizations)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

