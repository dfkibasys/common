/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.api;

import de.dfki.cos.basys.common.rest.camunda.ApiException;
import de.dfki.cos.basys.common.rest.camunda.dto.CountResultDto;
import de.dfki.cos.basys.common.rest.camunda.dto.EventSubscriptionDto;
import de.dfki.cos.basys.common.rest.camunda.dto.ExceptionDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventSubscriptionApi
 */
@Ignore
public class EventSubscriptionApiTest {

    private final EventSubscriptionApi api = new EventSubscriptionApi();

    
    /**
     * 
     *
     * Queries for event subscriptions that fulfill given parameters. The size of the result set can be retrieved by using the [Get Event Subscriptions count](https://docs.camunda.org/manual/7.14/reference/rest/event-subscription/get-query-count/) method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventSubscriptionsTest() throws ApiException {
        String eventSubscriptionId = null;
        String eventName = null;
        String eventType = null;
        String executionId = null;
        String processInstanceId = null;
        String activityId = null;
        String tenantIdIn = null;
        Boolean withoutTenantId = null;
        Boolean includeEventSubscriptionsWithoutTenantId = null;
        String sortBy = null;
        String sortOrder = null;
        Integer firstResult = null;
        Integer maxResults = null;
        List<EventSubscriptionDto> response = api.getEventSubscriptions(eventSubscriptionId, eventName, eventType, executionId, processInstanceId, activityId, tenantIdIn, withoutTenantId, includeEventSubscriptionsWithoutTenantId, sortBy, sortOrder, firstResult, maxResults);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Queries for the number of event subscriptions that fulfill given parameters. Takes the same parameters as the [Get Event Subscriptions](https://docs.camunda.org/manual/7.14/reference/rest/event-subscription/get-query/) method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventSubscriptionsCountTest() throws ApiException {
        String eventSubscriptionId = null;
        String eventName = null;
        String eventType = null;
        String executionId = null;
        String processInstanceId = null;
        String activityId = null;
        String tenantIdIn = null;
        Boolean withoutTenantId = null;
        Boolean includeEventSubscriptionsWithoutTenantId = null;
        CountResultDto response = api.getEventSubscriptionsCount(eventSubscriptionId, eventName, eventType, executionId, processInstanceId, activityId, tenantIdIn, withoutTenantId, includeEventSubscriptionsWithoutTenantId);

        // TODO: test validations
    }
    
}
