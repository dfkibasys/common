/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.dfki.cos.basys.common.rest.camunda.dto.ProcessInstanceQueryDtoSorting;
import de.dfki.cos.basys.common.rest.camunda.dto.VariableQueryParameterDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProcessInstanceQueryDto
 */
public class ProcessInstanceQueryDtoTest {
    private final ProcessInstanceQueryDto model = new ProcessInstanceQueryDto();

    /**
     * Model tests for ProcessInstanceQueryDto
     */
    @Test
    public void testProcessInstanceQueryDto() {
        // TODO: test ProcessInstanceQueryDto
    }

    /**
     * Test the property 'deploymentId'
     */
    @Test
    public void deploymentIdTest() {
        // TODO: test deploymentId
    }

    /**
     * Test the property 'processDefinitionId'
     */
    @Test
    public void processDefinitionIdTest() {
        // TODO: test processDefinitionId
    }

    /**
     * Test the property 'processDefinitionKey'
     */
    @Test
    public void processDefinitionKeyTest() {
        // TODO: test processDefinitionKey
    }

    /**
     * Test the property 'processDefinitionKeyIn'
     */
    @Test
    public void processDefinitionKeyInTest() {
        // TODO: test processDefinitionKeyIn
    }

    /**
     * Test the property 'processDefinitionKeyNotIn'
     */
    @Test
    public void processDefinitionKeyNotInTest() {
        // TODO: test processDefinitionKeyNotIn
    }

    /**
     * Test the property 'businessKey'
     */
    @Test
    public void businessKeyTest() {
        // TODO: test businessKey
    }

    /**
     * Test the property 'businessKeyLike'
     */
    @Test
    public void businessKeyLikeTest() {
        // TODO: test businessKeyLike
    }

    /**
     * Test the property 'caseInstanceId'
     */
    @Test
    public void caseInstanceIdTest() {
        // TODO: test caseInstanceId
    }

    /**
     * Test the property 'superProcessInstance'
     */
    @Test
    public void superProcessInstanceTest() {
        // TODO: test superProcessInstance
    }

    /**
     * Test the property 'subProcessInstance'
     */
    @Test
    public void subProcessInstanceTest() {
        // TODO: test subProcessInstance
    }

    /**
     * Test the property 'superCaseInstance'
     */
    @Test
    public void superCaseInstanceTest() {
        // TODO: test superCaseInstance
    }

    /**
     * Test the property 'subCaseInstance'
     */
    @Test
    public void subCaseInstanceTest() {
        // TODO: test subCaseInstance
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'processInstanceIds'
     */
    @Test
    public void processInstanceIdsTest() {
        // TODO: test processInstanceIds
    }

    /**
     * Test the property 'withIncident'
     */
    @Test
    public void withIncidentTest() {
        // TODO: test withIncident
    }

    /**
     * Test the property 'incidentId'
     */
    @Test
    public void incidentIdTest() {
        // TODO: test incidentId
    }

    /**
     * Test the property 'incidentType'
     */
    @Test
    public void incidentTypeTest() {
        // TODO: test incidentType
    }

    /**
     * Test the property 'incidentMessage'
     */
    @Test
    public void incidentMessageTest() {
        // TODO: test incidentMessage
    }

    /**
     * Test the property 'incidentMessageLike'
     */
    @Test
    public void incidentMessageLikeTest() {
        // TODO: test incidentMessageLike
    }

    /**
     * Test the property 'tenantIdIn'
     */
    @Test
    public void tenantIdInTest() {
        // TODO: test tenantIdIn
    }

    /**
     * Test the property 'withoutTenantId'
     */
    @Test
    public void withoutTenantIdTest() {
        // TODO: test withoutTenantId
    }

    /**
     * Test the property 'processDefinitionWithoutTenantId'
     */
    @Test
    public void processDefinitionWithoutTenantIdTest() {
        // TODO: test processDefinitionWithoutTenantId
    }

    /**
     * Test the property 'activityIdIn'
     */
    @Test
    public void activityIdInTest() {
        // TODO: test activityIdIn
    }

    /**
     * Test the property 'rootProcessInstances'
     */
    @Test
    public void rootProcessInstancesTest() {
        // TODO: test rootProcessInstances
    }

    /**
     * Test the property 'leafProcessInstances'
     */
    @Test
    public void leafProcessInstancesTest() {
        // TODO: test leafProcessInstances
    }

    /**
     * Test the property 'variables'
     */
    @Test
    public void variablesTest() {
        // TODO: test variables
    }

    /**
     * Test the property 'variableNamesIgnoreCase'
     */
    @Test
    public void variableNamesIgnoreCaseTest() {
        // TODO: test variableNamesIgnoreCase
    }

    /**
     * Test the property 'variableValuesIgnoreCase'
     */
    @Test
    public void variableValuesIgnoreCaseTest() {
        // TODO: test variableValuesIgnoreCase
    }

    /**
     * Test the property 'orQueries'
     */
    @Test
    public void orQueriesTest() {
        // TODO: test orQueries
    }

    /**
     * Test the property 'sorting'
     */
    @Test
    public void sortingTest() {
        // TODO: test sorting
    }

}
