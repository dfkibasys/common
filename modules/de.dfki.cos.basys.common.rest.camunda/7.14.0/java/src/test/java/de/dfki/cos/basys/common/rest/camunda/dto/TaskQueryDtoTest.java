/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.dfki.cos.basys.common.rest.camunda.dto.TaskQueryDtoSorting;
import de.dfki.cos.basys.common.rest.camunda.dto.VariableQueryParameterDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TaskQueryDto
 */
public class TaskQueryDtoTest {
    private final TaskQueryDto model = new TaskQueryDto();

    /**
     * Model tests for TaskQueryDto
     */
    @Test
    public void testTaskQueryDto() {
        // TODO: test TaskQueryDto
    }

    /**
     * Test the property 'processInstanceId'
     */
    @Test
    public void processInstanceIdTest() {
        // TODO: test processInstanceId
    }

    /**
     * Test the property 'processInstanceIdIn'
     */
    @Test
    public void processInstanceIdInTest() {
        // TODO: test processInstanceIdIn
    }

    /**
     * Test the property 'processInstanceBusinessKey'
     */
    @Test
    public void processInstanceBusinessKeyTest() {
        // TODO: test processInstanceBusinessKey
    }

    /**
     * Test the property 'processInstanceBusinessKeyExpression'
     */
    @Test
    public void processInstanceBusinessKeyExpressionTest() {
        // TODO: test processInstanceBusinessKeyExpression
    }

    /**
     * Test the property 'processInstanceBusinessKeyIn'
     */
    @Test
    public void processInstanceBusinessKeyInTest() {
        // TODO: test processInstanceBusinessKeyIn
    }

    /**
     * Test the property 'processInstanceBusinessKeyLike'
     */
    @Test
    public void processInstanceBusinessKeyLikeTest() {
        // TODO: test processInstanceBusinessKeyLike
    }

    /**
     * Test the property 'processInstanceBusinessKeyLikeExpression'
     */
    @Test
    public void processInstanceBusinessKeyLikeExpressionTest() {
        // TODO: test processInstanceBusinessKeyLikeExpression
    }

    /**
     * Test the property 'processDefinitionId'
     */
    @Test
    public void processDefinitionIdTest() {
        // TODO: test processDefinitionId
    }

    /**
     * Test the property 'processDefinitionKey'
     */
    @Test
    public void processDefinitionKeyTest() {
        // TODO: test processDefinitionKey
    }

    /**
     * Test the property 'processDefinitionKeyIn'
     */
    @Test
    public void processDefinitionKeyInTest() {
        // TODO: test processDefinitionKeyIn
    }

    /**
     * Test the property 'processDefinitionName'
     */
    @Test
    public void processDefinitionNameTest() {
        // TODO: test processDefinitionName
    }

    /**
     * Test the property 'processDefinitionNameLike'
     */
    @Test
    public void processDefinitionNameLikeTest() {
        // TODO: test processDefinitionNameLike
    }

    /**
     * Test the property 'executionId'
     */
    @Test
    public void executionIdTest() {
        // TODO: test executionId
    }

    /**
     * Test the property 'caseInstanceId'
     */
    @Test
    public void caseInstanceIdTest() {
        // TODO: test caseInstanceId
    }

    /**
     * Test the property 'caseInstanceBusinessKey'
     */
    @Test
    public void caseInstanceBusinessKeyTest() {
        // TODO: test caseInstanceBusinessKey
    }

    /**
     * Test the property 'caseInstanceBusinessKeyLike'
     */
    @Test
    public void caseInstanceBusinessKeyLikeTest() {
        // TODO: test caseInstanceBusinessKeyLike
    }

    /**
     * Test the property 'caseDefinitionId'
     */
    @Test
    public void caseDefinitionIdTest() {
        // TODO: test caseDefinitionId
    }

    /**
     * Test the property 'caseDefinitionKey'
     */
    @Test
    public void caseDefinitionKeyTest() {
        // TODO: test caseDefinitionKey
    }

    /**
     * Test the property 'caseDefinitionName'
     */
    @Test
    public void caseDefinitionNameTest() {
        // TODO: test caseDefinitionName
    }

    /**
     * Test the property 'caseDefinitionNameLike'
     */
    @Test
    public void caseDefinitionNameLikeTest() {
        // TODO: test caseDefinitionNameLike
    }

    /**
     * Test the property 'caseExecutionId'
     */
    @Test
    public void caseExecutionIdTest() {
        // TODO: test caseExecutionId
    }

    /**
     * Test the property 'activityInstanceIdIn'
     */
    @Test
    public void activityInstanceIdInTest() {
        // TODO: test activityInstanceIdIn
    }

    /**
     * Test the property 'tenantIdIn'
     */
    @Test
    public void tenantIdInTest() {
        // TODO: test tenantIdIn
    }

    /**
     * Test the property 'withoutTenantId'
     */
    @Test
    public void withoutTenantIdTest() {
        // TODO: test withoutTenantId
    }

    /**
     * Test the property 'assignee'
     */
    @Test
    public void assigneeTest() {
        // TODO: test assignee
    }

    /**
     * Test the property 'assigneeExpression'
     */
    @Test
    public void assigneeExpressionTest() {
        // TODO: test assigneeExpression
    }

    /**
     * Test the property 'assigneeLike'
     */
    @Test
    public void assigneeLikeTest() {
        // TODO: test assigneeLike
    }

    /**
     * Test the property 'assigneeLikeExpression'
     */
    @Test
    public void assigneeLikeExpressionTest() {
        // TODO: test assigneeLikeExpression
    }

    /**
     * Test the property 'assigneeIn'
     */
    @Test
    public void assigneeInTest() {
        // TODO: test assigneeIn
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'ownerExpression'
     */
    @Test
    public void ownerExpressionTest() {
        // TODO: test ownerExpression
    }

    /**
     * Test the property 'candidateGroup'
     */
    @Test
    public void candidateGroupTest() {
        // TODO: test candidateGroup
    }

    /**
     * Test the property 'candidateGroupExpression'
     */
    @Test
    public void candidateGroupExpressionTest() {
        // TODO: test candidateGroupExpression
    }

    /**
     * Test the property 'candidateUser'
     */
    @Test
    public void candidateUserTest() {
        // TODO: test candidateUser
    }

    /**
     * Test the property 'candidateUserExpression'
     */
    @Test
    public void candidateUserExpressionTest() {
        // TODO: test candidateUserExpression
    }

    /**
     * Test the property 'includeAssignedTasks'
     */
    @Test
    public void includeAssignedTasksTest() {
        // TODO: test includeAssignedTasks
    }

    /**
     * Test the property 'involvedUser'
     */
    @Test
    public void involvedUserTest() {
        // TODO: test involvedUser
    }

    /**
     * Test the property 'involvedUserExpression'
     */
    @Test
    public void involvedUserExpressionTest() {
        // TODO: test involvedUserExpression
    }

    /**
     * Test the property 'assigned'
     */
    @Test
    public void assignedTest() {
        // TODO: test assigned
    }

    /**
     * Test the property 'unassigned'
     */
    @Test
    public void unassignedTest() {
        // TODO: test unassigned
    }

    /**
     * Test the property 'taskDefinitionKey'
     */
    @Test
    public void taskDefinitionKeyTest() {
        // TODO: test taskDefinitionKey
    }

    /**
     * Test the property 'taskDefinitionKeyIn'
     */
    @Test
    public void taskDefinitionKeyInTest() {
        // TODO: test taskDefinitionKeyIn
    }

    /**
     * Test the property 'taskDefinitionKeyLike'
     */
    @Test
    public void taskDefinitionKeyLikeTest() {
        // TODO: test taskDefinitionKeyLike
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameNotEqual'
     */
    @Test
    public void nameNotEqualTest() {
        // TODO: test nameNotEqual
    }

    /**
     * Test the property 'nameLike'
     */
    @Test
    public void nameLikeTest() {
        // TODO: test nameLike
    }

    /**
     * Test the property 'nameNotLike'
     */
    @Test
    public void nameNotLikeTest() {
        // TODO: test nameNotLike
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'descriptionLike'
     */
    @Test
    public void descriptionLikeTest() {
        // TODO: test descriptionLike
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'maxPriority'
     */
    @Test
    public void maxPriorityTest() {
        // TODO: test maxPriority
    }

    /**
     * Test the property 'minPriority'
     */
    @Test
    public void minPriorityTest() {
        // TODO: test minPriority
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'dueDateExpression'
     */
    @Test
    public void dueDateExpressionTest() {
        // TODO: test dueDateExpression
    }

    /**
     * Test the property 'dueAfter'
     */
    @Test
    public void dueAfterTest() {
        // TODO: test dueAfter
    }

    /**
     * Test the property 'dueAfterExpression'
     */
    @Test
    public void dueAfterExpressionTest() {
        // TODO: test dueAfterExpression
    }

    /**
     * Test the property 'dueBefore'
     */
    @Test
    public void dueBeforeTest() {
        // TODO: test dueBefore
    }

    /**
     * Test the property 'dueBeforeExpression'
     */
    @Test
    public void dueBeforeExpressionTest() {
        // TODO: test dueBeforeExpression
    }

    /**
     * Test the property 'followUpDate'
     */
    @Test
    public void followUpDateTest() {
        // TODO: test followUpDate
    }

    /**
     * Test the property 'followUpDateExpression'
     */
    @Test
    public void followUpDateExpressionTest() {
        // TODO: test followUpDateExpression
    }

    /**
     * Test the property 'followUpAfter'
     */
    @Test
    public void followUpAfterTest() {
        // TODO: test followUpAfter
    }

    /**
     * Test the property 'followUpAfterExpression'
     */
    @Test
    public void followUpAfterExpressionTest() {
        // TODO: test followUpAfterExpression
    }

    /**
     * Test the property 'followUpBefore'
     */
    @Test
    public void followUpBeforeTest() {
        // TODO: test followUpBefore
    }

    /**
     * Test the property 'followUpBeforeExpression'
     */
    @Test
    public void followUpBeforeExpressionTest() {
        // TODO: test followUpBeforeExpression
    }

    /**
     * Test the property 'followUpBeforeOrNotExistent'
     */
    @Test
    public void followUpBeforeOrNotExistentTest() {
        // TODO: test followUpBeforeOrNotExistent
    }

    /**
     * Test the property 'followUpBeforeOrNotExistentExpression'
     */
    @Test
    public void followUpBeforeOrNotExistentExpressionTest() {
        // TODO: test followUpBeforeOrNotExistentExpression
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'createdOnExpression'
     */
    @Test
    public void createdOnExpressionTest() {
        // TODO: test createdOnExpression
    }

    /**
     * Test the property 'createdAfter'
     */
    @Test
    public void createdAfterTest() {
        // TODO: test createdAfter
    }

    /**
     * Test the property 'createdAfterExpression'
     */
    @Test
    public void createdAfterExpressionTest() {
        // TODO: test createdAfterExpression
    }

    /**
     * Test the property 'createdBefore'
     */
    @Test
    public void createdBeforeTest() {
        // TODO: test createdBefore
    }

    /**
     * Test the property 'createdBeforeExpression'
     */
    @Test
    public void createdBeforeExpressionTest() {
        // TODO: test createdBeforeExpression
    }

    /**
     * Test the property 'delegationState'
     */
    @Test
    public void delegationStateTest() {
        // TODO: test delegationState
    }

    /**
     * Test the property 'candidateGroups'
     */
    @Test
    public void candidateGroupsTest() {
        // TODO: test candidateGroups
    }

    /**
     * Test the property 'candidateGroupsExpression'
     */
    @Test
    public void candidateGroupsExpressionTest() {
        // TODO: test candidateGroupsExpression
    }

    /**
     * Test the property 'withCandidateGroups'
     */
    @Test
    public void withCandidateGroupsTest() {
        // TODO: test withCandidateGroups
    }

    /**
     * Test the property 'withoutCandidateGroups'
     */
    @Test
    public void withoutCandidateGroupsTest() {
        // TODO: test withoutCandidateGroups
    }

    /**
     * Test the property 'withCandidateUsers'
     */
    @Test
    public void withCandidateUsersTest() {
        // TODO: test withCandidateUsers
    }

    /**
     * Test the property 'withoutCandidateUsers'
     */
    @Test
    public void withoutCandidateUsersTest() {
        // TODO: test withoutCandidateUsers
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'taskVariables'
     */
    @Test
    public void taskVariablesTest() {
        // TODO: test taskVariables
    }

    /**
     * Test the property 'processVariables'
     */
    @Test
    public void processVariablesTest() {
        // TODO: test processVariables
    }

    /**
     * Test the property 'caseInstanceVariables'
     */
    @Test
    public void caseInstanceVariablesTest() {
        // TODO: test caseInstanceVariables
    }

    /**
     * Test the property 'variableNamesIgnoreCase'
     */
    @Test
    public void variableNamesIgnoreCaseTest() {
        // TODO: test variableNamesIgnoreCase
    }

    /**
     * Test the property 'variableValuesIgnoreCase'
     */
    @Test
    public void variableValuesIgnoreCaseTest() {
        // TODO: test variableValuesIgnoreCase
    }

    /**
     * Test the property 'parentTaskId'
     */
    @Test
    public void parentTaskIdTest() {
        // TODO: test parentTaskId
    }

    /**
     * Test the property 'orQueries'
     */
    @Test
    public void orQueriesTest() {
        // TODO: test orQueries
    }

    /**
     * Test the property 'sorting'
     */
    @Test
    public void sortingTest() {
        // TODO: test sorting
    }

}
