/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.dfki.cos.basys.common.rest.camunda.dto.ExternalTaskQueryDtoSorting;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ExternalTaskQueryDto
 */
public class ExternalTaskQueryDtoTest {
    private final ExternalTaskQueryDto model = new ExternalTaskQueryDto();

    /**
     * Model tests for ExternalTaskQueryDto
     */
    @Test
    public void testExternalTaskQueryDto() {
        // TODO: test ExternalTaskQueryDto
    }

    /**
     * Test the property 'externalTaskId'
     */
    @Test
    public void externalTaskIdTest() {
        // TODO: test externalTaskId
    }

    /**
     * Test the property 'externalTaskIdIn'
     */
    @Test
    public void externalTaskIdInTest() {
        // TODO: test externalTaskIdIn
    }

    /**
     * Test the property 'topicName'
     */
    @Test
    public void topicNameTest() {
        // TODO: test topicName
    }

    /**
     * Test the property 'workerId'
     */
    @Test
    public void workerIdTest() {
        // TODO: test workerId
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'notLocked'
     */
    @Test
    public void notLockedTest() {
        // TODO: test notLocked
    }

    /**
     * Test the property 'withRetriesLeft'
     */
    @Test
    public void withRetriesLeftTest() {
        // TODO: test withRetriesLeft
    }

    /**
     * Test the property 'noRetriesLeft'
     */
    @Test
    public void noRetriesLeftTest() {
        // TODO: test noRetriesLeft
    }

    /**
     * Test the property 'lockExpirationAfter'
     */
    @Test
    public void lockExpirationAfterTest() {
        // TODO: test lockExpirationAfter
    }

    /**
     * Test the property 'lockExpirationBefore'
     */
    @Test
    public void lockExpirationBeforeTest() {
        // TODO: test lockExpirationBefore
    }

    /**
     * Test the property 'activityId'
     */
    @Test
    public void activityIdTest() {
        // TODO: test activityId
    }

    /**
     * Test the property 'activityIdIn'
     */
    @Test
    public void activityIdInTest() {
        // TODO: test activityIdIn
    }

    /**
     * Test the property 'executionId'
     */
    @Test
    public void executionIdTest() {
        // TODO: test executionId
    }

    /**
     * Test the property 'processInstanceId'
     */
    @Test
    public void processInstanceIdTest() {
        // TODO: test processInstanceId
    }

    /**
     * Test the property 'processInstanceIdIn'
     */
    @Test
    public void processInstanceIdInTest() {
        // TODO: test processInstanceIdIn
    }

    /**
     * Test the property 'processDefinitionId'
     */
    @Test
    public void processDefinitionIdTest() {
        // TODO: test processDefinitionId
    }

    /**
     * Test the property 'tenantIdIn'
     */
    @Test
    public void tenantIdInTest() {
        // TODO: test tenantIdIn
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'priorityHigherThanOrEquals'
     */
    @Test
    public void priorityHigherThanOrEqualsTest() {
        // TODO: test priorityHigherThanOrEquals
    }

    /**
     * Test the property 'priorityLowerThanOrEquals'
     */
    @Test
    public void priorityLowerThanOrEqualsTest() {
        // TODO: test priorityLowerThanOrEquals
    }

    /**
     * Test the property 'sorting'
     */
    @Test
    public void sortingTest() {
        // TODO: test sorting
    }

}
