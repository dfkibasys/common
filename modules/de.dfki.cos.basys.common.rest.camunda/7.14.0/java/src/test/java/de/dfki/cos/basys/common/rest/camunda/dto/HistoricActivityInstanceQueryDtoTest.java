/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dfki.cos.basys.common.rest.camunda.dto;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.dfki.cos.basys.common.rest.camunda.dto.HistoricActivityInstanceQueryDtoSorting;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HistoricActivityInstanceQueryDto
 */
public class HistoricActivityInstanceQueryDtoTest {
    private final HistoricActivityInstanceQueryDto model = new HistoricActivityInstanceQueryDto();

    /**
     * Model tests for HistoricActivityInstanceQueryDto
     */
    @Test
    public void testHistoricActivityInstanceQueryDto() {
        // TODO: test HistoricActivityInstanceQueryDto
    }

    /**
     * Test the property 'activityInstanceId'
     */
    @Test
    public void activityInstanceIdTest() {
        // TODO: test activityInstanceId
    }

    /**
     * Test the property 'processInstanceId'
     */
    @Test
    public void processInstanceIdTest() {
        // TODO: test processInstanceId
    }

    /**
     * Test the property 'processDefinitionId'
     */
    @Test
    public void processDefinitionIdTest() {
        // TODO: test processDefinitionId
    }

    /**
     * Test the property 'executionId'
     */
    @Test
    public void executionIdTest() {
        // TODO: test executionId
    }

    /**
     * Test the property 'activityId'
     */
    @Test
    public void activityIdTest() {
        // TODO: test activityId
    }

    /**
     * Test the property 'activityName'
     */
    @Test
    public void activityNameTest() {
        // TODO: test activityName
    }

    /**
     * Test the property 'activityType'
     */
    @Test
    public void activityTypeTest() {
        // TODO: test activityType
    }

    /**
     * Test the property 'taskAssignee'
     */
    @Test
    public void taskAssigneeTest() {
        // TODO: test taskAssignee
    }

    /**
     * Test the property 'finished'
     */
    @Test
    public void finishedTest() {
        // TODO: test finished
    }

    /**
     * Test the property 'unfinished'
     */
    @Test
    public void unfinishedTest() {
        // TODO: test unfinished
    }

    /**
     * Test the property 'canceled'
     */
    @Test
    public void canceledTest() {
        // TODO: test canceled
    }

    /**
     * Test the property 'completeScope'
     */
    @Test
    public void completeScopeTest() {
        // TODO: test completeScope
    }

    /**
     * Test the property 'startedBefore'
     */
    @Test
    public void startedBeforeTest() {
        // TODO: test startedBefore
    }

    /**
     * Test the property 'startedAfter'
     */
    @Test
    public void startedAfterTest() {
        // TODO: test startedAfter
    }

    /**
     * Test the property 'finishedBefore'
     */
    @Test
    public void finishedBeforeTest() {
        // TODO: test finishedBefore
    }

    /**
     * Test the property 'finishedAfter'
     */
    @Test
    public void finishedAfterTest() {
        // TODO: test finishedAfter
    }

    /**
     * Test the property 'tenantIdIn'
     */
    @Test
    public void tenantIdInTest() {
        // TODO: test tenantIdIn
    }

    /**
     * Test the property 'withoutTenantId'
     */
    @Test
    public void withoutTenantIdTest() {
        // TODO: test withoutTenantId
    }

    /**
     * Test the property 'sorting'
     */
    @Test
    public void sortingTest() {
        // TODO: test sorting
    }

}
